#include <iostream>
#include <string>
using namespace std;
class shape {
    private:
        string name;
        int type;
    public:
        shape(string _name, int _type) : name(_name), type(_type){}
    string getName(){ 
    return name; 
    }
    int getType(){ 
        return type; 
    }
    shape(): type(0) {}
};
class square : public shape {
    private:
        int side;
    public:
        square(int side) : shape("square", 1), side(side) {}
        double getArea(){ 
            return side * side;
        }
};
int main() {
    shape myshape("Base shape", 0);
    square mysquare(5);
    cout << "Shape name => " << myshape.getName() << endl;
    cout << "Shape name => " << mysquare.getName() << endl;
    shape* shapes[4];
    shapes[0] = new shape("base 2", 0);
    shapes[1] = new square(10);
    shapes[2] = new square(20);
    shapes[3] = new square(30);
    for (int i = 0; i < 4; ++i) {
        cout << "Shape name => " << shapes[i]->getName() << endl;
    if (shapes[i]->getType() == 1) {
        cout << "Area => " << ((square*)shapes[i])->getArea() << endl;
    }
    else {
        cout << "Not a square, no area available" << endl;
    }
    /*alt
    cout << (shapes[i]->getType() == 1 ? "Area => " +
    to_string(((square*)shapes[i])->getArea()) : "Not a square, no
    area available") << endl;
    */
    }   //end for
    // Clean up
    for (int i = 0; i < 4; ++i) {
        delete shapes[i];
    }
    return 0;
}